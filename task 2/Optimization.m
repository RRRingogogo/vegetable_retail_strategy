% 导入预测的日销售值
hat_Q =[
29.22246053	186.2949681	28.50318887	31.82545023	119.6600446	72.10237528;
22.93757583	173.6544055	23.94455008	32.64595084	103.6889053	59.84288592;
11.77599082	114.1767753	13.25185916	20.74170378	67.59767751	36.04203005;
9.880905809	120.4086285	13.11973006	18.70212713	66.69943186	32.38575348;
12.89836698	116.2498832	13.79885838	18.66318449	66.79761999	39.36147098;
14.96453136	118.7900134	16.04975268	18.61766236	75.11535488	42.1288687;
17.55010764	128.9358356	18.71354567	21.61327826	88.12252685	52.5579845;
]
%% 
% 导入预测的单位成本
c =[
10.99549188	3.184934185	7.888464735	4.72742347	3.615437643	4.235932328;
11.91833569	3.209532403	7.997031007	4.612519159	3.581469467	3.985237844;
11.62332202	3.210042607	8.004492678	4.616401426	3.601383714	4.109135382;
11.7257307	3.210552812	7.92600142	4.672959579	3.618805726	4.149437084;
11.6984489	3.211063016	7.882191245	4.665131781	3.627448828	4.136085296;
11.71348888	3.21157322	7.92025941	4.641428544	3.599147135	4.134818081;
11.71471803	3.212083424	7.971907953	4.650793088	3.583743938	4.141235581;
]
%% 
%导入拟合公式系数
beta = [
3.856 0.462 -0.253;
-34.736 0.991 16.562;
16.646 0.624 -2.555;
6.144 0.582 -0.956;
90.316 1.1 -23.307;
4.046 0.727 -1.237
]
    
%% 
%导入平均损耗率
Delta = [
0.1365	0.1283	0.1551	0.0668	0.0924	0.0945    
]

%% 
% 初始化存储结果的矩阵
num_days = size(hat_Q, 1);
x_optimal = zeros(num_days, 6);
f_optimal = zeros(num_days, 1);

% 循环计算不同日期的最优解和目标值
for i = 1:num_days
    % 定义目标函数
    objective = @(x) -(3.856 + 0.462 * x(1) - 0.253 * c(i, 1) - 0.1365 * hat_Q(i, 1) * c(i, 1) + ...
                        -34.736 + 0.991 * x(2) + 16.562 * c(i, 2) - 0.1283 * hat_Q(i, 2) * c(i, 2) + ...
                        16.646 + 0.624 * x(3) - 0.1551 * c(i, 3) - 0.1365 * hat_Q(i, 3) * c(i, 3) + ...
                        6.144 + 0.582 * x(4) - 0.0668 * c(i, 4) - 0.1365 * hat_Q(i, 4) * c(i, 4) + ...
                        90.316 + 1.1 * x(5) - 0.0924 * c(i, 5) - 0.1365 * hat_Q(i, 5) * c(i, 5) + ...
                        4.046 + 0.727 * x(6) - 0.0945 * c(i, 6) - 0.1365 * hat_Q(i, 6) * c(i, 6));
    
    % 求解最优 x
    A = [];
    b = [];
    Aeq = [];
    beq = [];
    lb = zeros(1, 6);
    ub = hat_Q(i, :);
    x0 = zeros(1, 6);  % 初始解可以根据需要设置
    options = optimoptions('fmincon', 'Display', 'off');
    [x, f] = fmincon(objective, x0, A, b, Aeq, beq, lb, ub, [], options);
    
    % 存储结果
    x_optimal(i, :) = x;
    f_optimal(i) = -f;  % 因为目标函数是最大化，所以要取负号
    
    % 打印结果
    disp(['日期 ', num2str(i)]);
    disp(['最优 x: ', num2str(x)]);
    disp(['最优 f: ', num2str(f_optimal(i))]);
end



